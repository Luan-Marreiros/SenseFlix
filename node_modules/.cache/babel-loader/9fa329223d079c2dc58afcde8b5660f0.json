{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luanm\\\\Desktop\\\\sense-flix\\\\src\\\\components\\\\catalogo.js\";\nimport React from 'react';\nimport './catalogo.css';\nimport N_A from './n-a.jpg';\nimport { Row, Col, Button, Input, FormGroup } from 'reactstrap';\n\nclass Catalogo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Title: [],\n      Plot: [],\n      Poster: [],\n      mdbRating: [],\n      Runtime: [],\n      mdbId: []\n    };\n  }\n\n  componentDidMount() {\n    var random = Math.floor(Math.random() * 1500000) + 1000000; // const apiUrl = 'http://127.0.0.2:8080/movie';   \n\n    const apiUrl = \"http://www.omdbapi.com/?apikey=2729c5a&i=tt\" + fetch(apiUrl).then(response => response.json()).then(data => {\n      //   alert(data.Poster)\n      alert(apiUrl);\n      this.setState({\n        Title: data.Title\n      });\n      this.setState({\n        Plot: data.Plot\n      });\n\n      if (data.Poster == \"N/A\" || data.Poster == undefined || data.Response == 'False') {\n        this.setState({\n          Poster: N_A\n        });\n      } else {\n        this.setState({\n          Poster: data.Poster\n        });\n      }\n\n      this.setState({\n        mdbId: '\"/detalhes/' + data.mdbId + '\"'\n      });\n      this.setState({\n        mdbRating: data.mdbRating\n      });\n      this.setState({\n        Runtime: data.Runtime\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"bgfime\",\n      href: this.state.mdbRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"poster\",\n      src: this.state.Poster,\n      alt: \"poster\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"poster-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, this.state.Title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }, this.state.Plot), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"small\", {\n      id: \"notaFilme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, \"Nota: \", this.state.mdbRating), /*#__PURE__*/React.createElement(\"small\", {\n      id: \"tempoFilme\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, this.state.Runtime))))));\n  }\n\n}\n\nexport default Catalogo;","map":{"version":3,"sources":["C:/Users/luanm/Desktop/sense-flix/src/components/catalogo.js"],"names":["React","N_A","Row","Col","Button","Input","FormGroup","Catalogo","Component","state","Title","Plot","Poster","mdbRating","Runtime","mdbId","componentDidMount","random","Math","floor","apiUrl","fetch","then","response","json","data","alert","setState","undefined","Response","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './catalogo.css';\r\nimport N_A from './n-a.jpg'\r\nimport { Row, Col, Button, Input, FormGroup } from 'reactstrap';\r\n\r\n\r\nclass Catalogo extends React.Component{\r\n\r\n    state={\r\n        Title: [],\r\n        Plot: [],\r\n        Poster: [],\r\n        mdbRating: [],\r\n        Runtime: [],\r\n        mdbId: []\r\n    }\r\n    \r\n  componentDidMount() {\r\n      var random = Math.floor(Math.random() * 1500000) + 1000000\r\n    // const apiUrl = 'http://127.0.0.2:8080/movie';   \r\n    const apiUrl = \"http://www.omdbapi.com/?apikey=2729c5a&i=tt\"+\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        //   alert(data.Poster)\r\n          alert(apiUrl)\r\n          this.setState({Title: data.Title})\r\n          this.setState({Plot: data.Plot})\r\n          if(data.Poster == \"N/A\" || data.Poster == undefined || data.Response == 'False'){\r\n            this.setState({Poster: N_A})\r\n          }else{\r\n            this.setState({Poster: data.Poster})\r\n          }\r\n          this.setState({mdbId: '\"/detalhes/' + data.mdbId + '\"'})\r\n          this.setState({mdbRating: data.mdbRating})\r\n          this.setState({Runtime: data.Runtime})\r\n      });\r\n  }\r\n\r\n  render() {\r\n     return (\r\n        <div>\r\n            <Col md='2'>\r\n                <a className=\"bgfime\" href={this.state.mdbRating}>\r\n                    <Col md='12'>\r\n                        <img className=\"poster\" src={(this.state.Poster)} alt=\"poster\"/>\r\n                    </Col>\r\n                    <div className=\"poster-text\">\r\n                        <h3>{this.state.Title}</h3>\r\n                        <p>{this.state.Plot}</p>\r\n                        <FormGroup>\r\n                            <small id=\"notaFilme\">Nota: {this.state.mdbRating}</small>\r\n                            <small id=\"tempoFilme\">{this.state.Runtime}</small>\r\n                        </FormGroup>\r\n                    </div>\r\n                </a>\r\n            </Col>     \r\n        </div>  \r\n     )\r\n  }\r\n  \r\n}\r\n\r\n  \r\nexport default Catalogo;\r\n  \r\n"]},"metadata":{},"sourceType":"module"}